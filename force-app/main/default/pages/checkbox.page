<apex:page controller="TogleClass">
    <style>
        .toggle-check-input {
        width: 1px;
        height: 1px;
        position: absolute;
        }
        
        .toggle-check-text {
        display: inline-block;
        position: relative;
        text-transform: uppercase;
        background: #CCC;
        padding: 0.25em 0.5em 0.25em 2em;
        border-radius: 1em;
        min-width: 2em;
        color: #FFF;
        cursor: pointer;
        transition: background-color 0.15s;
        }
        
        .toggle-check-text:after {
        content: ' ';
        display: block;
        background: #FFF;
        width: 1.1em;
        height: 1.1em;
        border-radius: 1em;
        position: absolute;
        left: 0.3em;
        top: 0.25em;
        transition: left 0.15s, margin-left 0.15s;
        }
        
        .toggle-check-text:before {
        content: 'OFF';
        }
        
        .toggle-check-input:checked ~ .toggle-check-text {
        background: #8ad869;
        padding-left: 0.5em;
        padding-right: 2em;
        }
        
        .toggle-check-input:checked ~ .toggle-check-text:before {
        content: 'ON';
        }
        
        .toggle-check-input:checked ~ .toggle-check-text:after {
        left: 100%;
        margin-left: -1.4em;
        }
        
    </style>
    <script>
    function goApex(x){
        console.log(x);
        console.log(x.checked);
        hold();
    }
    </script>
    <apex:form id="pnlSummary">
        <apex:pageMessages ></apex:pageMessages>
        <label class="toggle-check">
            {!v1}
            <apex:inputCheckbox styleClass="toggle-check-input" value="{!v1}" onchange="goApex(this)">
                <apex:actionFunction action="{!changeFun}" name="hold" reRender="pnlSummary" immediate="true"/>
            </apex:inputCheckbox>
            <span class="toggle-check-text" value="{!v1}"></span>
        </label>
    </apex:form>
</apex:page>